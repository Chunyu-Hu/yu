#
# qmake configuration for building with linux-g++
#

MAKEFILE_GENERATOR      = UNIX
TARGET_PLATFORM         = unix
TEMPLATE                = app
CONFIG                  += qt warn_on release incremental link_prl gdb_dwarf_index
QMAKE_INCREMENTAL_STYLE = sublib

QT_QPA_DEFAULT_PLATFORM = linuxfb

#QMAKE_CFLAGS_RELEASE = -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=softfp -I/opt/arm/tslib-1.4.gcc_4_8_3/include -std=gnu++11
#QMAKE_CXXFLAGS_RELEASE = -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -mfloat-abi=softfp -I/opt/arm/tslib-1.4.gcc_4_8_3/include -std=gnu++11
QMAKE_CFLAGS_RELEASE = -O3 -march=armv7-a -mtune=cortex-a8 -I/opt/arm/tslib-1.4.gcc_4_8_3/include -std=gnu++11
QMAKE_CXXFLAGS_RELEASE = -O3 -march=armv7-a -mtune=cortex-a8 -I/opt/arm/tslib-1.4.gcc_4_8_3/include -std=gnu++11

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/g++-unix.conf)

# modifications to g++.conf
QMAKE_CC                = /opt/arm/gcc-4.8.3/bin/arm-none-linux-gnueabi-gcc
QMAKE_CXX               = /opt/arm/gcc-4.8.3/bin/arm-none-linux-gnueabi-g++
QMAKE_LINK              = /opt/arm/gcc-4.8.3/bin/arm-none-linux-gnueabi-g++ -lts
QMAKE_LINK_SHLIB        = /opt/arm/gcc-4.8.3/bin/arm-none-linux-gnueabi-g++ -lts

# modifications to linux.conf
QMAKE_AR                = /opt/arm/gcc-4.8.3/bin/arm-none-linux-gnueabi-ar cqs
QMAKE_OBJCOPY           = /opt/arm/gcc-4.8.3/bin/arm-none-linux-gnueabi-objcopy
QMAKE_STRIP             = /opt/arm/gcc-4.8.3/bin/arm-none-linux-gnueabi-strip

load(qt_config)
